How did viewing a diff between two versions of a file help you see the bug that was introduced?
- By quickly isolating what had changed.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
- You can start to see how you tend to work.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
- Pros are that you know when best save a version that makes sense to you. Con is it’s totally up to you to remember to.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
- The ones that don’t aren’t tailored for a programers workflow.

How can you use the commands git log and git diff to view the history of files?
- Log lets you see all versions available and diff lets you see what’s changed.

How might using version control make you more confident to make changes that could break something?
- It easy to backtrack steps over several versions to see what went wrong. Ultimately it frees you from the fear of irrevocably breaking something.

Now that you have your workspace set up, what do you want to try using Git for?
A javascript floor plan.