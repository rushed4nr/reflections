What happens when you initialize a repository? Why do you need to do it?
- It creates the hidden .git folder at that location.
- To get git setup and ready track version changes.


How is the staging area different from the working directory and the repository? What value do you think it offers?
- Instead of committing everything in the working directory, the staging area allows you the choice of what you really want to keep track of so you can use/keep other files in the same location as scratch.


How can you use the staging area to make sure you have one commit per logical change?
- Just commit the files that are grouped logically with the change.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- When adding questionable features or multiple developers.


How do the diagrams help you visualize the branch structure?
- By seeing from what commit a branch emerged.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
- Added functionality from both tracks.


What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
- If it can figure out the additive differences then that’s less work for you to do. 
